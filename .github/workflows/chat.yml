name: Deploy Chat Service

on:
  workflow_dispatch:
    inputs:
      deploy:
        description: 'Deploy the service'
        required: true
        default: 'false'

env:
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
  KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
  NAMESPACE: ${{ secrets.NAMESPACE }}
  IMAGE: andreq21/chat:${{ github.sha }}

jobs:
  lint:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.deploy == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22.4

      - name: Run linters
        run: |
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.59.1
          golangci-lint run ./service/chat/... --config ./.golangci.pipeline.yaml

  build:
    runs-on: ubuntu-latest
    needs: lint
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.deploy == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: |
          docker build -t $IMAGE -f ./service/chat/Dockerfile .

      - name: Login to Docker Hub
        run: |
          echo $DOCKER_HUB_PASSWORD | docker login -u $DOCKER_HUB_USERNAME --password-stdin

      - name: Push Docker image to Docker Hub
        run: |
          docker push $IMAGE

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.deploy == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gettext

      - name: Set up kubectl
        run: |
          mkdir -p $HOME/.kube
          echo "$KUBE_CONFIG" | base64 --decode > $HOME/.kube/config

      - name: Substitute environment variables in configmap
        run: |
          export $(grep -v '^#' $ENV | xargs)
          envsubst < deploy/helm/chat/templates/configmap.yaml > ./configmap.yaml
          mv ./configmap.yaml deploy/helm/chat/templates/configmap.yaml

      - name: Deploy to Kubernetes
        run: |
          helm upgrade --install chat ./deploy/helm/chat --namespace=$NAMESPACE --set app.image.tag=$IMAGE
